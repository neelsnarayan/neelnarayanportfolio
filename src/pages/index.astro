---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card/index.astro";
import IntroCard from "../components/IntroCard.astro";
import ContactsCard from "../components/ContactsCard.astro";
import AboutMe from "../components/AboutMe.astro";
import Now from "../components/Now.astro";
import { getCurrentTimeInPST, formatTimeForPST } from "../lib/helpers";
---

<script>
  import { stagger, spring, timeline, type TimelineDefinition } from "motion";
  import { loaderAnimation } from "../lib/constants";
  const cards = document.querySelectorAll(".card");

  const sequence = [
    loaderAnimation,
    [
      cards,
      { y: ["40%", "0%"], opacity: [0, 1] },
      {
        at: "-0.1",
        duration: 0.4,
        delay: stagger(0.3),
        easing: spring({ velocity: 100, stiffness: 50, damping: 10 }),
      },
    ],
  ];

  timeline(sequence as TimelineDefinition);
</script>

<Layout
  title="Neel Narayan"
  description="Sup"
>
  <main
    class="text-white m-auto p-2 grid gap-2 max-w-6xl overflow-hidden relative w-full sm:p-4 sm:gap-2 md:grid-cols-2 md:gap-3 md:p-6 lg:h-screen lg:grid-rows-8 lg:grid-cols-4 lg:gap-4 lg:max-h-[800px]"
  >
    <IntroCard />
    <AboutMe />
    <ContactsCard />
    <Card
      colSpan="lg:col-span-2"
      rowSpan="md:row-span-2"
      title="Most Recently"
    >
      <div class="flex h-full">
        <div class="flex-1 pr-4" id="projectsContainer">
          <div class="project-slide active" data-index="0">
            <div class="list-none w-full text-neutral-100 hover:text-neutral-400 ease-in-out transition-colors border-b-neutral-400 border-dashed border-b-1 my-0">
              <div class="flex items-center gap-2 mb-2">
                <a href="https://www.tourember.com/" target="_blank" class="flex items-center gap-2 hover:text-primary-500 transition-colors">
                  <p class="inline-block text-sm font-bold">I Built ember</p>
                </a>
              </div>
              <p class="text-xs text-gray-400 mt-1 mb-3">A platform that gives students transparency in the college admissions process.</p>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <h3 class="text-xs font-semibold text-primary-500 mb-2">Important Parts</h3>
                  <ul class="text-xs text-gray-500 space-y-1">
                    <li>‚Ä¢ Personalized Campus Tours</li>
                    <li>‚Ä¢ Ask Guides Anything</li>
                  </ul>
                </div>
                <div>
                  <h3 class="text-xs font-semibold text-primary-500 mb-2">Links</h3>
                  <ul class="text-xs text-gray-500 space-y-1">
                    <li>‚Ä¢ <a href="https://www.tourember.com/" target="_blank" class="hover:text-primary-500 transition-colors">ember</a></li>
                    <li>‚Ä¢ <a href="https://bluestars.us/webinar-making-college-campus-tours-worth-your-time/" target="_blank" class="hover:text-primary-500 transition-colors">Blue Stars Webinar</a></li>
                  </ul>
                </div>
              </div>
            </div>
          </div>

          <div class="project-slide hidden" data-index="1">
            <div class="list-none w-full text-neutral-100 hover:text-neutral-400 ease-in-out transition-colors border-b-neutral-400 border-dashed border-b-1 my-0">
              <div class="flex items-center gap-2 mb-2">
                <p class="inline-block text-sm font-bold">Reinforcement Learning for Stochastic Finance Teaching Assistant</p>
              </div>
              <p class="text-xs text-gray-400 mt-1 mb-3">I'm demystifying TD Lambda and Policy Optimization for Stanford Students ü§ì</p>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <h3 class="text-xs font-semibold text-primary-500 mb-2">Important Parts</h3>
                  <ul class="text-xs text-gray-500 space-y-1">
                    <li>‚Ä¢ I create homeworks and exams</li>
                    <li>‚Ä¢ I love hosting office hours</li>
                  </ul>
                </div>
                <div>
                  <h3 class="text-xs font-semibold text-primary-500 mb-2">Links</h3>
                  <ul class="text-xs text-gray-500 space-y-1">
                    <li>‚Ä¢ <a href="https://cme241.github.io/" target="_blank" class="hover:text-primary-500 transition-colors">Course Site</a></li>
                    <li>‚Ä¢ <a href="https://github.com/TikhonJelvis/RL-book/tree/master/rl" target="_blank" class="hover:text-primary-500 transition-colors">Content</a></li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="flex flex-col justify-center gap-2">
          <button id="prevProject" class="p-1 hover:text-primary-500 transition-colors" aria-label="Previous project">
            <span class="text-lg">‚Üë</span>
          </button>
          <button id="nextProject" class="p-1 hover:text-primary-500 transition-colors" aria-label="Next project">
            <span class="text-lg">‚Üì</span>
          </button>
        </div>
      </div>

      <style>
        .project-slide {
          opacity: 0;
          transition: opacity 0.3s ease-in-out;
          position: absolute;
          width: 100%;
        }
        .project-slide.active {
          opacity: 1;
          position: relative;
        }
        .project-slide.hidden {
          display: none;
        }
      </style>

      <script>
        let currentIndex = 0;
        const slides = document.querySelectorAll('.project-slide');
        const totalSlides = slides.length;

        function updateSlides() {
          slides.forEach(slide => {
            slide.classList.remove('active');
            slide.classList.add('hidden');
          });
          slides[currentIndex].classList.remove('hidden');
          slides[currentIndex].classList.add('active');
        }

        document.getElementById('nextProject')?.addEventListener('click', () => {
          currentIndex = (currentIndex + 1) % totalSlides;
          updateSlides();
        });

        document.getElementById('prevProject')?.addEventListener('click', () => {
          currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
          updateSlides();
        });
      </script>
    </Card>
    <Now />
    <Card
      colSpan="md:col-span-1"
      rowSpan="md:row-span-1"
      colorText="text-neutral-100"
    >
      <div class="font-mono text-sm h-full flex items-center">
        <span class="text-primary-500">$</span>
        <span id="terminal-text" class="ml-2"></span>
        <span class="animate-pulse">_</span>
      </div>
    </Card>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const messages = [
          "Training deep learning models...",
          "Optimizing portfolios...",
          "Building financial systems...",
          "Developing ML pipelines...",
          "Playing with RL frameworks..."
        ];
        
        const terminalText = document.getElementById('terminal-text');
        if (!terminalText) return;
        
        let currentMessageIndex = 0;
        let currentCharIndex = 0;
        let isDeleting = false;
        let typingSpeed = 100;
        
        function typeText() {
          const currentMessage = messages[currentMessageIndex];
          
          if (isDeleting) {
            terminalText.textContent = currentMessage.substring(0, currentCharIndex - 1);
            currentCharIndex--;
            typingSpeed = 50;
          } else {
            terminalText.textContent = currentMessage.substring(0, currentCharIndex + 1);
            currentCharIndex++;
            typingSpeed = 100;
          }
          
          if (!isDeleting && currentCharIndex === currentMessage.length) {
            isDeleting = true;
            typingSpeed = 1500; // Pause at the end
          } else if (isDeleting && currentCharIndex === 0) {
            isDeleting = false;
            currentMessageIndex = (currentMessageIndex + 1) % messages.length;
            typingSpeed = 500; // Pause before next message
          }
          
          setTimeout(typeText, typingSpeed);
        }
        
        typeText();
      });
    </script>
    <Card
      colSpan="md:col-span-1"
      rowSpan="md:row-span-2"
      title="Neel Time"
    >
      <time
        datetime=""
        id="timeDisplay"
        class="text-2xl whitespace-nowrap h-[calc(100%-28px)] font-serif flex justify-start items-center"
      >
        Loading...
      </time>
    </Card>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const timeDisplay = document.getElementById("timeDisplay");
        function updateClock() {
          const now = new Date();
          const options = {
            hour: "numeric",
            minute: "2-digit",
            second: "2-digit",
            hour12: true,
            timeZone: "America/Los_Angeles"
          };
          const time = new Intl.DateTimeFormat('en-US', options).format(now);
          if (timeDisplay) {
            timeDisplay.textContent = `${time} PST`;
            timeDisplay.setAttribute("datetime", now.toISOString());
          }
        }
        updateClock(); // Run immediately
        setInterval(updateClock, 1000); // Update every second
      });
    </script>
    <Card colSpan="md:col-span-1" rowSpan="md:row-span-1">
      <p class="text-xs">
        ¬© 2025 ¬∑ Crafted with ‚ô•Ô∏è by Neel.
      </p>
    </Card>
  </main>
</Layout>
